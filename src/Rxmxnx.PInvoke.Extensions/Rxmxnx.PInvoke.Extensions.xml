<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rxmxnx.PInvoke.Extensions</name>
    </assembly>
    <members>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.BinaryExtensions">
            <summary>
            Provides a set of extensions for basic operations with <see cref="T:System.Byte"/> instances.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.BinaryExtensions.AsValue``1(System.Byte[])">
            <summary>
            Retrieves a <typeparamref name="T"/> value from the given <see cref="T:System.Byte"/> array.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of <see langword="unmanaged"/> value.</typeparam>
            <param name="array"><see cref="T:System.Byte"/> array.</param>
            <returns><typeparamref name="T"/> readed value.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.BinaryExtensions.AsHexString(System.Byte[])">
            <summary>
            Gets <see cref="T:System.String"/> representation of <see cref="T:System.Byte"/> array hexadecimal value.
            </summary>
            <param name="bytes"><see cref="T:System.Byte"/> array.</param>
            <returns><see cref="T:System.String"/> representation of hexadecimal value.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.BinaryExtensions.AsHexString(System.Byte)">
            <summary>
            Gets <see cref="T:System.String"/> representation of <see cref="T:System.Byte"/> hexadecimal value.
            </summary>
            <param name="value"><see cref="T:System.Byte"/> value.</param>
            <returns><see cref="T:System.String"/> representation of hexadecimal value.</returns>
        </member>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.DelegateExtensions">
            <summary>
            Provides a set of extensions for basic operations with <see cref="T:System.Delegate"/> instances.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.DelegateExtensions.AsIntPtr``1(``0)">
            <summary>
            Creates a <see cref="T:System.IntPtr"/> pointer from a memory reference to a <typeparamref name="T"/> delegate.
            </summary>
            <typeparam name="T">Type of the <see cref="T:System.Delegate"/> referenced into the pointer.</typeparam>
            <param name="delegateInstance"><typeparamref name="T"/> delegate.</param>
            <returns><see cref="T:System.IntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.DelegateExtensions.AsUIntPtr``1(``0)">
            <summary>
            Creates a <see cref="T:System.UIntPtr"/> pointer from a memory reference to a <typeparamref name="T"/> delegate.
            </summary>
            <typeparam name="T">Type of the <see cref="T:System.Delegate"/> referenced into the pointer.</typeparam>
            <param name="delegateInstance"><typeparamref name="T"/> delegate.</param>
            <returns><see cref="T:System.UIntPtr"/> pointer.</returns>
        </member>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions">
            <summary>
            Provides a set of extensions for basic operations with <see cref="T:System.Span`1"/> and <see cref="T:System.ReadOnlySpan`1"/> instances.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions.AsIntPtr``1(System.Span{``0})">
            <summary>
            Creates a <see cref="T:System.IntPtr"/> pointer from <see cref="T:System.Span`1"/> instance.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="span">The span from which the pointer is retrieved.</param>
            <returns><see cref="T:System.IntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions.AsIntPtr``1(System.ReadOnlySpan{``0})">
            <summary>
            Creates a <see cref="T:System.IntPtr"/> pointer from <see cref="T:System.ReadOnlySpan`1"/> instance.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="readonlySpan">The read-only from which the pointer is retrieved.</param>
            <returns><see cref="T:System.IntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions.AsUIntPtr``1(System.Span{``0})">
            <summary>
            Creates a <see cref="T:System.UIntPtr"/> pointer from <see cref="T:System.Span`1"/> instance.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="span">The span from which the pointer is retrieved.</param>
            <returns><see cref="T:System.UIntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions.AsUIntPtr``1(System.ReadOnlySpan{``0})">
            <summary>
            Creates a <see cref="T:System.UIntPtr"/> pointer from <see cref="T:System.ReadOnlySpan`1"/> instance.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="readonlySpan">The read-only from which the pointer is retrieved.</param>
            <returns><see cref="T:System.UIntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions.GetConditionalIntPtrZero(System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Nullable`1"/> from a given condition. 
            </summary>
            <param name="condition">Indicates whether the <see cref="F:System.IntPtr.Zero"/> must be returned.</param>
            <returns>
            <see cref="F:System.IntPtr.Zero"/> if <paramref name="condition"/> is <see langword="true"/>; otherwise,
            <see langword="null"/>.
            </returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.MemoryBlockExtensions.GetConditionalUIntPtrZero(System.Boolean)">
            <summary>
            Gets a <see cref="T:System.Nullable`1"/> from a given condition. 
            </summary>
            <param name="condition">Indicates whether the <see cref="F:System.UIntPtr.Zero"/> must be returned.</param>
            <returns>
            <see cref="F:System.UIntPtr.Zero"/> if <paramref name="condition"/> is <see langword="true"/>; otherwise,
            <see langword="null"/>.
            </returns>
        </member>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.NativeUtilities">
            <summary>
            Provides a set of utilities for exchange data within the P/Invoke context.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.NativeUtilities.SizeOf``1">
            <summary>
            Retrieves the size of <typeparamref name="T"/> structure.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of <see langword="unmanaged"/> value.</typeparam>
            <returns>Size of <typeparamref name="T"/> structure.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.NativeUtilities.LoadNativeLib(System.String,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
            <summary>
            Provides a high-level API for loading a native library.
            </summary>
            <param name="libraryName">The name of the native library to be loaded.</param>
            <param name="searchPath">The search path.</param>
            <returns>The OS handle for the loaded native library.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.NativeUtilities.LoadNativeLib(System.String,System.EventHandler@,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})">
            <summary>
            Provides a high-level API for loading a native library.
            </summary>
            <param name="libraryName">The name of the native library to be loaded.</param>
            <param name="unloadEvent">
            <see cref="T:System.EventHandler"/> delegate to append <see cref="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)"/> invocation.
            </param>
            <param name="searchPath">The search path.</param>
            <returns>The OS handle for the loaded native library.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.NativeUtilities.GetNativeMethod``1(System.IntPtr,System.String)">
            <summary>
            Gets the <typeparamref name="T"/> delegate of an exported symbol.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="handle">The native library OS handle.</param>
            <param name="name">The name of the exported symbol.</param>
            <returns><typeparamref name="T"/> delegate.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.NativeUtilities.AsBytes``1(``0@)">
            <summary>
            Retrieves a <see cref="T:System.Byte"/> array from the given <typeparamref name="T"/> value.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of <see langword="unmanaged"/> value.</typeparam>
            <param name="value"><typeparamref name="T"/> value.</param>
            <returns><see cref="T:System.Byte"/> array.</returns>
        </member>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions">
            <summary>
            Provides a set of extensions for basic operations with <see cref="T:System.IntPtr"/> and <see cref="T:System.UIntPtr"/> instances.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.IsZero(System.IntPtr)">
            <summary>
            Indicates whether the <see cref="T:System.IntPtr"/> pointer is a <see langword="null"/> memory reference.
            </summary>
            <param name="ptr"><see cref="T:System.IntPtr"/> pointer.</param>
            <returns>
            <see langword="true"/> if <see cref="T:System.IntPtr"/> instance is a <see langword="null"/> memory reference; 
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.IsZero(System.UIntPtr)">
            <summary>
            Indicates whether the <see cref="T:System.UIntPtr"/> pointer is a <see langword="null"/> memory reference.
            </summary>
            <param name="uptr"><see cref="T:System.UIntPtr"/> pointer.</param>
            <returns>
            <see langword="true"/> if <see cref="T:System.UIntPtr"/> instance is a <see langword="null"/> memory reference; 
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsUIntPtr(System.IntPtr)">
            <summary>
            Creates a <see cref="T:System.UIntPtr"/> value from given <see cref="T:System.IntPtr"/> value.
            </summary>
            <param name="ptr"><see cref="T:System.IntPtr"/> value.</param>
            <returns><see cref="T:System.UIntPtr"/> value.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsIntPtr(System.UIntPtr)">
            <summary>
            Creates a <see cref="T:System.IntPtr"/> value from given <see cref="T:System.UIntPtr"/> value.
            </summary>
            <param name="uptr"><see cref="T:System.UIntPtr"/> value.</param>
            <returns><see cref="T:System.IntPtr"/> value.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsString(System.IntPtr,System.Int32)">
            <summary>
            Creates a <see cref="T:System.String"/> instance taking the memory reference of <see cref="T:System.IntPtr"/> 
            value as the UTF-16 text starting point.
            </summary>
            <param name="ptr"><see cref="T:System.IntPtr"/> pointer to starting point of UTF-16 text.</param>
            <param name="length">Optional. Number of <see cref="T:System.Char"/> values contained into the UTF-16 text.</param>
            <returns>
            <see cref="T:System.String"/> representation of UTF-16 text.
            If the <paramref name="length"/> value is great than zero the lenght of the resulting <see cref="T:System.String"/> instance 
            will equal to this value; otherwise, will be equal to the distance between the starting point of UTF-16 text and the
            first null character (\0) position.
            </returns>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsString(System.UIntPtr,System.Int32)">
            <summary>
            Creates a <see cref="T:System.String"/> instance taking the memory reference of <see cref="T:System.UIntPtr"/> 
            value as the UTF-16 text starting point.
            </summary>
            <param name="uptr"><see cref="T:System.UIntPtr"/> pointer to starting point of UTF-16 text.</param>
            <param name="length">Optional. Number of <see cref="T:System.Char"/> values contained into the UTF-16 text.</param>
            <returns>
            <see cref="T:System.String"/> representation of UTF-16 text.
            If the <paramref name="length"/> value is great than zero the lenght of the resulting <see cref="T:System.String"/> instance 
            will equal to this value; otherwise, will be equal to the distance between the starting point of UTF-16 text and the
            first null character (\0) position.
            </returns>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsReadOnlySpan``1(System.IntPtr,System.Int32)">
            <summary>
            Creates a <see cref="T:System.ReadOnlySpan`1"/> instance from <see cref="T:System.IntPtr"/> pointer.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="ptr"><see cref="T:System.IntPtr"/> pointer.</param>
            <param name="length">
            Number of <typeparamref name="T"/> <see langword="unmanaged"/> values to retrive form the contiguous region of memory.
            </param>
            <returns><see cref="T:System.ReadOnlySpan`1"/> instance.</returns>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsReadOnlySpan``1(System.UIntPtr,System.Int32)">
            <summary>
            Creates a <see cref="T:System.ReadOnlySpan`1"/> instance from <see cref="T:System.UIntPtr"/> pointer.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="uptr"><see cref="T:System.UIntPtr"/> pointer.</param>
            <param name="length">
            Number of <typeparamref name="T"/> <see langword="unmanaged"/> values to retrive form the contiguous region of memory.
            </param>
            <returns><see cref="T:System.ReadOnlySpan`1"/> instance.</returns>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsDelegate``1(System.IntPtr)">
            <summary>
            Creates an <typeparamref name="T"/> delegate from from <see cref="T:System.IntPtr"/> pointer.
            </summary>
            <typeparam name="T">Type of the <see cref="T:System.Delegate"/> referenced into the pointer.</typeparam>
            <param name="ptr"><see cref="T:System.IntPtr"/> pointer.</param>
            <returns><typeparamref name="T"/> delegate.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsDelegate``1(System.UIntPtr)">
            <summary>
            Creates an <typeparamref name="T"/> delegate from from <see cref="T:System.UIntPtr"/> pointer.
            </summary>
            <typeparam name="T">Type of the <see cref="T:System.Delegate"/> referenced into the pointer.</typeparam>
            <param name="uptr"><see cref="T:System.UIntPtr"/> pointer.</param>
            <returns><typeparamref name="T"/> delegate.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsReference``1(System.IntPtr)">
            <summary>
            Creates a memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value from 
            a <see cref="T:System.IntPtr"/> pointer.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of the <see langword="unmanaged"/> referenced value.</typeparam>
            <param name="ptr"><see cref="T:System.IntPtr"/> pointer.</param>
            <returns>Memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.AsReference``1(System.UIntPtr)">
            <summary>
            Creates a memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value from 
            a <see cref="T:System.UIntPtr"/> pointer.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of the <see langword="unmanaged"/> referenced value.</typeparam>
            <param name="uptr"><see cref="T:System.UIntPtr"/> pointer.</param>
            <returns>Memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.ValidateLengthParameter(System.Int32,System.String)">
            <summary>
            Validates an memory length parameter.
            </summary>
            <param name="length">Memory length value.</param>
            <param name="lengthParameterName">Name of the memory length parameter.</param>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.GetStringFromCharPointer(System.Char*,System.Int32)">
            <summary>
            Creates a <see cref="T:System.String"/> instance taking a <see cref="T:System.Char"/> pointer as the UTF-16 text starting point.
            </summary>
            <param name="chrPtr"><see cref="T:System.Char"/> pointer.</param>
            <param name="length">Number of <see cref="T:System.Char"/> values contained into the UTF-16 text.</param>
            <see cref="T:System.String"/> representation of UTF-16 text.
            <returns>
            If the <paramref name="length"/> value is great than zero the lenght of the resulting <see cref="T:System.String"/> instance 
            will equal to this value; otherwise, will be equal to the distance between the starting point of UTF-16 text and the
            first null character (\0) position.
            </returns>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.GetReadOnlySpanFromPointer``1(System.Void*,System.Int32)">
            <summary>
            Creates a <see cref="T:System.ReadOnlySpan`1"/> instance from a native pointer.
            </summary>
            <typeparam name="T">
            <see cref="T:System.ValueType"/> of <see langword="unmanaged"/> values contened into the contiguous region of memory.
            </typeparam>
            <param name="ptr">Native pointer.</param>
            <param name="length">
            Number of <typeparamref name="T"/> <see langword="unmanaged"/> values to retrive form the contiguous region of memory.
            </param>
            <returns><see cref="T:System.ReadOnlySpan`1"/> instance.</returns>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.PointerExtensions.GetPointerFromReference``1(System.Void*)">
            <summary>
            Creates a memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value from 
            a native pointer.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of the <see langword="unmanaged"/> referenced value.</typeparam>
            <param name="ptr">Native pointer.</param>
            <returns>Memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.</returns>
        </member>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.ReferenceExtensions">
            <summary>
            Provides a set of extensions for basic operations with memory references to <see cref="T:System.ValueType"/> 
            <see langword="unmanaged"/> values.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.ReferenceExtensions.AsIntPtr``1(``0@)">
            <summary>
            Creates a <see cref="T:System.IntPtr"/> pointer from a memory reference to a <typeparamref name="T"/> 
            <see langword="unmanaged"/> value.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of the referenced <see langword="unmanaged"/> value.</typeparam>
            <param name="refValue">Memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.</param>
            <returns><see cref="T:System.IntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.ReferenceExtensions.AsUIntPtr``1(``0@)">
            <summary>
            Creates a <see cref="T:System.UIntPtr"/> pointer from a memory reference to a <typeparamref name="T"/> 
            <see langword="unmanaged"/> value.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of the referenced <see langword="unmanaged"/> value.</typeparam>
            <param name="refValue">Memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.</param>
            <returns><see cref="T:System.UIntPtr"/> pointer.</returns>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.ReferenceExtensions.GetPointerFromRef``1(``0@)">
            <summary>
            Retrieves the native pointer from a memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of the referenced <see langword="unmanaged"/> value.</typeparam>
            <param name="refValue">Memory reference to a <typeparamref name="T"/> <see langword="unmanaged"/> value.</param>
            <returns>Native pointer.</returns>
        </member>
        <member name="T:Rxmxnx.PInvoke.Extensions.Tests.UnmanagedValueExtensions">
            <summary>
            Provides a set of extensions for basic operations with <see cref="T:System.ValueType"/> <see langword="unmanaged"/> values.
            </summary>
        </member>
        <member name="M:Rxmxnx.PInvoke.Extensions.Tests.UnmanagedValueExtensions.AsBytes``1(``0)">
            <summary>
            Retrieves a <see cref="T:System.Byte"/> array from the given <typeparamref name="T"/> value.
            </summary>
            <typeparam name="T"><see cref="T:System.ValueType"/> of <see langword="unmanaged"/> value.</typeparam>
            <param name="value"><typeparamref name="T"/> value.</param>
            <returns><see cref="T:System.Byte"/> array.</returns>
        </member>
    </members>
</doc>
