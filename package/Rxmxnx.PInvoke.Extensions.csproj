<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>net6.0;net8.0;net9.0</TargetFrameworks>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <RootNamespace>Rxmxnx.PInvoke</RootNamespace>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <DocumentationFile>./$(AssemblyName).xml</DocumentationFile>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <ExcludeXmlAssemblyFiles>false</ExcludeXmlAssemblyFiles>
        <IsPackable>true</IsPackable>
        <Deterministic>true</Deterministic>
        <CheckEolTargetFramework>false</CheckEolTargetFramework>
        <IsTrimmable Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net6.0'))">true</IsTrimmable>
        <IsTrimmable Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net8.0'))">true</IsTrimmable>
        <IsTrimmable Condition="$([MSBuild]::IsTargetFrameworkCompatible('$(TargetFramework)', 'net9.0'))">true</IsTrimmable>
        <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
        <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">true</ContinuousIntegrationBuild>
        <LangVersion>latest</LangVersion>
    </PropertyGroup>

    <ItemGroup>
        <EmbeddedResource Include="..\..\src\Intermediate\Rxmxnx.PInvoke.Buffers.Intermediate\ILLink\ILLink.Substitutions.xml">
            <LogicalName>ILLink.Substitutions.xml</LogicalName>
        </EmbeddedResource>
    </ItemGroup>

    <PropertyGroup Condition="Exists('Rxmxnx.PInvoke.snk')">
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>Rxmxnx.PInvoke.snk</AssemblyOriginatorKeyFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
    </ItemGroup>

    <ItemGroup>
        <Compile Include="..\src\Intermediate\Rxmxnx.PInvoke.Common.Intermediate\**\*.cs">
            <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
        </Compile>
        <Compile Include="..\src\Intermediate\Rxmxnx.PInvoke.CString.Intermediate\**\*.cs">
            <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
        </Compile>
        <Compile Include="..\src\Intermediate\Rxmxnx.PInvoke.Extensions.Intermediate\**\*.cs">
            <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
        </Compile>
        <Compile Remove="..\src\Intermediate\**\obj\**\*.*;..\..\Intermediate\**\bin\**\*.*" />
        <Compile Include="..\src\Intermediate\**\*.GlobalUsings.g.cs" />
    </ItemGroup>

    <ItemGroup>
        <None Include="..\README.md" Pack="true" PackagePath="/" />
        <None Include="..\LICENSE" Pack="true" PackagePath="LICENSE.md" />
    </ItemGroup>

    <PropertyGroup>
        <Authors>Joseph Moreno</Authors>
        <Product>Rxmxnx.PInvoke.Extensions</Product>
        <Description>Provides a set of extensions and utilites which facilitates exchange of data from and to .NET P/Invoke methods (or UnmanagedCallersOnly using NativeAOT) avoiding use of both native pointers and unsafe context.</Description>
        <Copyright>Copyright Â© Joseph Moreno 2023</Copyright>
        <Summary>Provides a set of extensions and utilites which facilitates exchange of data from and to .NET P/Invoke methods (or UnmanagedCallersOnly using NativeAOT) avoiding use of both native pointers and unsafe context.</Summary>
        <NeutralLanguage>en-US</NeutralLanguage>
        <Title>Rxmxnx.PInvoke.Extensions</Title>
        <PackageId>Rxmxnx.PInvoke.Extensions</PackageId>
        <PackageTags>
            PInvoke;Binary;Reference;Unmanaged;Memory;NativeAOT;Utf8;CString;Pointer;Span;
            ReadOnlySpan;Unsafe;Fixed;Native;FFI;Binary;u8;Literals;StackAlloc;LocalBuffer;
            ObjectBuffer;
        </PackageTags>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
    </PropertyGroup>

</Project>
